{"version":3,"sources":["InfoBox/InfoBox.js","Map/MapData.jsx","Map/Map.jsx","Table/Table.jsx","LineGraph/LineGraph.jsx","Vaccine/VaccineCard.jsx","Footer/Footer.jsx","VaccinePage.jsx","Vaccine/Vaccine.jsx","Home.jsx","App.js","serviceWorker.js","index.js"],"names":["InfoBox","title","cases","active","textColor","total","props","className","Card","onClick","isGreen","isYellow","CardContent","Typography","casesTypeColors","hex","rgb","half_op","multiplier","recovered","deaths","Map","countries","center","zoom","casesType","TileLayer","url","attribution","data","map","country","Circle","countryInfo","lat","long","color","fillColor","fillOpacity","radius","Math","sqrt","Popup","style","backgroundImage","flag","numeral","format","showDataOnMap","Table","sort","a","b","options","legend","display","elements","point","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","value","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","LineGraph","useState","setData","buildChartData","lastDataPoint","chartData","date","newDataPoint","x","y","push","useEffect","fetch","then","response","json","catch","err","console","log","getFetchData","length","datasets","backgroundColor","borderColor","VaccineCard","vaccine","history","useHistory","handleClick","e","localStorage","setItem","JSON","stringify","id","candidate","trialPhase","institutions","join","Footer","Date","getFullYear","VaccinePage","parse","getItem","to","class","sponsors","funding","details","Vaccine","vaccines","setVaccines","fetchVaccineData","key","Home","setCountries","mapCountries","setMapCountries","setCountry","setCountryInfo","tableData","setTableData","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","setCasesType","setFlag","error","name","iso2","getCountriesData","onCountryChange","countryCode","target","src","alt","FormControl","Select","variant","onChange","MenuItem","updated","todayCases","todayRecovered","todayDeaths","App","exact","from","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.acd429c0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./InfoBox.style.css\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\n\r\nfunction InfoBox({ title, cases, active, textColor, total, ...props }) {\r\n  return (\r\n    <div className={`col-md-4 col-sm-6 my-2`}>\r\n      <Card\r\n        onClick={props.onClick}\r\n        className={`${active && \"info--border\"} ${\r\n          (props.isGreen && \"border--green\") ||\r\n          (props.isYellow && \"border--yellow\")\r\n        }`}\r\n      >\r\n        <CardContent>\r\n          <Typography className=\"text-secondary\">{title}</Typography>\r\n          <h4 className={`${textColor}`}>+{cases}</h4>\r\n          <Typography className=\"text-secondary\">{total} total</Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfoBox;\r\n","import React from \"react\";\r\nimport numeral from \"numeral\";\r\nimport { Circle, Popup } from \"react-leaflet\";\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    hex: \"#CC1034\",\r\n    rgb: \"rgb(204, 16, 52)\",\r\n    half_op: \"rgba(204, 16, 52, 0.5)\",\r\n    multiplier: 800,\r\n  },\r\n  recovered: {\r\n    hex: \"#7dd71d\",\r\n    rgb: \"rgb(125, 215, 29)\",\r\n    half_op: \"rgba(125, 215, 29, 0.5)\",\r\n    multiplier: 1200,\r\n  },\r\n  deaths: {\r\n    hex: \"#fb4443\",\r\n    rgb: \"rgb(251, 68, 67)\",\r\n    half_op: \"rgba(251, 68, 67, 0.5)\",\r\n    multiplier: 2000,\r\n  },\r\n};\r\n\r\nexport const showDataOnMap = (data, casesType = \"cases\") =>\r\n  data.map((country) => (\r\n    <Circle\r\n      center={[country.countryInfo.lat, country.countryInfo.long]}\r\n      color={casesTypeColors[casesType].hex}\r\n      fillColor={casesTypeColors[casesType].hex}\r\n      fillOpacity={0.4}\r\n      radius={\r\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n      }\r\n    >\r\n      <Popup>\r\n        <div className=\"info-container\">\r\n          <div\r\n            className=\"info-flag\"\r\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n          ></div>\r\n          <div className=\"info-name\">{country.country}</div>\r\n          <div className=\"info-confirmed\">\r\n            Cases: {numeral(country.cases).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-recovered\">\r\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\r\n          </div>\r\n        </div>\r\n      </Popup>\r\n    </Circle>\r\n  ));\r\n","import React from \"react\";\r\nimport { Map as LeafletMap, TileLayer } from \"react-leaflet\";\r\nimport \"./Map.style.css\";\r\nimport { showDataOnMap } from \"./MapData\";\r\n\r\nfunction Map({ countries, center, zoom, casesType }) {\r\n  return (\r\n    <div className=\"map\">\r\n      <LeafletMap center={center} zoom={zoom}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        {showDataOnMap(countries, casesType)}\r\n      </LeafletMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React from \"react\";\r\nimport \"./Table.style.css\";\r\nimport numeral from \"numeral\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\n\r\nfunction Table({ countries }) {\r\n  countries.sort((a, b) => (a.cases > b.cases ? -1 : 1));\r\n  return (\r\n    <div className=\"table\">\r\n      <Card>\r\n        <CardContent>\r\n          <h5 className=\"text-center\">Live cases by country</h5>\r\n          {countries.map(({ country, cases }) => (\r\n            <tr>\r\n              <td>{country}</td>\r\n              <td>\r\n                <strong>{numeral(cases).format(\"0,0\")}</strong>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./LineGraph.style.css\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\n\r\n// This is option to show the hover effect of this linegraph\r\nconst options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          // Include a dollar sign in the ticks\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nfunction LineGraph({ casesType }) {\r\n  const [data, setData] = useState({});\r\n\r\n  const buildChartData = (data, casesType) => {\r\n    const chartData = [];\r\n    let lastDataPoint;\r\n    for (let date in data.cases) {\r\n      if (lastDataPoint) {\r\n        const newDataPoint = {\r\n          x: date,\r\n          y: data[casesType][date] - lastDataPoint,\r\n        };\r\n        chartData.push(newDataPoint);\r\n      }\r\n      lastDataPoint = data[casesType][date];\r\n    }\r\n    return chartData;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getFetchData = async () => {\r\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=150\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const chartData = buildChartData(data, casesType);\r\n          setData(chartData);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    };\r\n    getFetchData();\r\n  }, [casesType]);\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent className=\"graph-card\">\r\n          <h5>Worldwide new {casesType} in a graph:</h5>\r\n          {data?.length > 0 && (\r\n            <Line\r\n              options={options}\r\n              data={{\r\n                datasets: [\r\n                  {\r\n                    data: data,\r\n                    backgroundColor: \"rgba(204,16,52,0.8)\",\r\n                    borderColor: \"#CC1034\",\r\n                  },\r\n                ],\r\n              }}\r\n            />\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Vaccine.style.css\";\r\n\r\nfunction VaccineCard({ vaccine, index }) {\r\n  let history = useHistory();\r\n  const handleClick = async (e) => {\r\n    await localStorage.setItem(\"vaccine\", JSON.stringify(vaccine));\r\n    history.push(\"/vaccine\");\r\n  };\r\n  return (\r\n    <div className=\"col-lg-3 col-md-4 col-sm-6 my-2\">\r\n      <div className=\"card text-center vaccine-card\">\r\n        <div className=\"card-body\" id={index} onClick={handleClick}>\r\n          <h5 className=\"text-success\">{vaccine.candidate}</h5>\r\n          <small className=\"text-primary\">\r\n            <strong>Trial Phase :</strong> {vaccine.trialPhase}\r\n          </small>\r\n          <p className=\"text-left mt-2\">\r\n            <strong>Institution:</strong> {vaccine.institutions.join(\", \")}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VaccineCard;\r\n","import React from \"react\";\r\nimport \"./Footer.style.css\";\r\n\r\nfunction Footer() {\r\n  const date = new Date().getFullYear();\r\n  return (\r\n    <div className=\"bg-secondary text-center py-3\">\r\n      <h4>© Alamgir Akash (EEE-18, BUET), {date} </h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Footer from \"./Footer/Footer\";\r\n\r\nfunction VaccinePage() {\r\n  let vaccine = JSON.parse(localStorage.getItem(\"vaccine\"));\r\n  let history = useHistory();\r\n\r\n  console.log(vaccine);\r\n\r\n  return (\r\n    <div className=\"vaccine_page\">\r\n      <div className=\"container p-4\">\r\n        {vaccine.candidate ? (\r\n          <div>\r\n            <Link to=\"/home\" class=\"btn-lg btn-primary goBack-button\">\r\n              Go Back\r\n            </Link>\r\n            <h2 className=\"text-success text-center\">{vaccine.candidate}</h2>\r\n            <p>\r\n              <strong>Sponsors : </strong>\r\n              {vaccine.sponsors.join(\",\")}\r\n            </p>\r\n            <p>\r\n              <strong>Trial Phase : </strong>\r\n              {vaccine.trialPhase}\r\n            </p>\r\n            <p>\r\n              <strong>Institutions : </strong>\r\n              {vaccine.institutions.join(\",\")}\r\n            </p>\r\n            <p>\r\n              <strong>Funding : </strong>\r\n              {vaccine.funding.join(\",\")}\r\n            </p>\r\n\r\n            <p>\r\n              <strong>Details : </strong>\r\n              {vaccine.details}\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <h4>No data to see</h4>\r\n        )}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VaccinePage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Vaccine.style.css\";\r\nimport VaccineCard from \"./VaccineCard\";\r\nimport VaccinePage from \"../VaccinePage\";\r\n\r\nfunction Vaccine() {\r\n  const [vaccines, setVaccines] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchVaccineData = async () => {\r\n      await fetch(\"https://disease.sh/v3/covid-19/vaccine\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setVaccines(data.data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    };\r\n    fetchVaccineData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {vaccines.map((vaccine, index) => (\r\n        <VaccineCard vaccine={vaccine} index={index} key={index} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Vaccine;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FormControl, Select, MenuItem } from \"@material-ui/core\";\r\nimport \"./App.css\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport numeral from \"numeral\";\r\n\r\nimport InfoBox from \"./InfoBox/InfoBox\";\r\nimport Map from \"./Map/Map\";\r\nimport Table from \"./Table/Table\";\r\nimport LineGraph from \"./LineGraph/LineGraph\";\r\nimport Vaccine from \"./Vaccine/Vaccine\";\r\nimport Footer from \"./Footer/Footer\";\r\n\r\nfunction Home() {\r\n  const [countries, setCountries] = useState([]);\r\n  const [mapCountries, setMapCountries] = useState([]);\r\n  const [country, setCountry] = useState(\"worldwide\");\r\n  const [countryInfo, setCountryInfo] = useState({});\r\n  const [tableData, setTableData] = useState([]);\r\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\r\n  const [mapZoom, setMapZoom] = useState(3);\r\n  const [casesType, setCasesType] = useState(\"cases\");\r\n  const [flag, setFlag] = useState(\r\n    \"https://disease.sh/assets/img/flags/bd.png\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://disease.sh/v3/covid-19/all\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCountryInfo(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getCountriesData = async () => {\r\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const countries = data.map((country) => ({\r\n            name: country.country,\r\n            value: country.countryInfo.iso2,\r\n          }));\r\n          setTableData(data);\r\n          setCountries(countries);\r\n          setMapCountries(data);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    };\r\n    getCountriesData();\r\n  }, []);\r\n\r\n  const onCountryChange = async (e) => {\r\n    const countryCode = e.target.value;\r\n    setCountry(countryCode);\r\n\r\n    const url =\r\n      countryCode === \"worldwide\"\r\n        ? \"https://disease.sh/v3/covid-19/all\"\r\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\r\n\r\n    await fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCountryInfo(data);\r\n        setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\r\n        setMapZoom(5);\r\n        setFlag(data.countryInfo.flag);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"App container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8 my-3 p-2\">\r\n            {/*This is the title and the dropdown part*/}\r\n            <header className=\"row d-flex justify-content-between align-items-center mb-3\">\r\n              <h2 className=\"text-danger\">COVID-19 TRACKER</h2>\r\n\r\n              <div>\r\n                <img src={flag} alt=\"\" className=\"flag\" />\r\n                <FormControl className=\"app__dropdown\">\r\n                  <Select\r\n                    variant=\"outlined\"\r\n                    value={country}\r\n                    onChange={onCountryChange}\r\n                  >\r\n                    <MenuItem value=\"worldwide\">Worldwide</MenuItem>\r\n                    {countries.map((country) => (\r\n                      <MenuItem value={country.value}>{country.name}</MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n            </header>\r\n            {/*Info boxes part*/}\r\n            <h5 className=\"text-success my-2\">\r\n              Last updated at: {`${new Date(countryInfo.updated)}`}\r\n            </h5>\r\n            <div className=\"row\">\r\n              <InfoBox\r\n                active={casesType === \"cases\"}\r\n                isYellow={true && casesType === \"cases\"}\r\n                onClick={(e) => setCasesType(\"cases\")}\r\n                title=\"Coronavirus Cases\"\r\n                textColor=\"text-warning\"\r\n                cases={numeral(countryInfo.todayCases).format(\"0.0a\")}\r\n                total={numeral(countryInfo.cases).format(\"0.0a\")}\r\n              />\r\n              <InfoBox\r\n                active={casesType === \"recovered\"}\r\n                isGreen={true && casesType === \"recovered\"}\r\n                onClick={(e) => setCasesType(\"recovered\")}\r\n                title=\"Recoverd\"\r\n                textColor=\"text-success\"\r\n                cases={numeral(countryInfo.todayRecovered).format(\"0.0a\")}\r\n                total={numeral(countryInfo.recovered).format(\"0.0a\")}\r\n              />\r\n              <InfoBox\r\n                active={casesType === \"deaths\"}\r\n                onClick={(e) => setCasesType(\"deaths\")}\r\n                title=\"Deaths\"\r\n                textColor=\"text-danger\"\r\n                cases={numeral(countryInfo.todayDeaths).format(\"0.0a\")}\r\n                total={numeral(countryInfo.deaths).format(\"0.0a\")}\r\n              />\r\n            </div>\r\n            <div className=\"row\">\r\n              <Map\r\n                casesType={casesType}\r\n                countries={mapCountries}\r\n                center={mapCenter}\r\n                zoom={mapZoom}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 p-2\">\r\n            <div className=\"row p-2 mx-2\">\r\n              <Table countries={tableData} />\r\n            </div>\r\n            <div className=\"row my-3\">\r\n              <div className=\"mx-auto\">\r\n                {/*Line Graph*/}\r\n                <LineGraph casesType={casesType} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row p-2\">\r\n          <h2 className=\"text-center mx-auto my-2 text-primary\">\r\n            Vaccine's News\r\n          </h2>\r\n          <Vaccine />\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport Home from \"./Home\";\r\nimport VaccinePage from \"./VaccinePage.jsx\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Redirect exact from=\"/\" to=\"/home\" />\r\n      <Switch>\r\n        <Route exact path=\"/home\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/vaccine\">\r\n          <VaccinePage />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}